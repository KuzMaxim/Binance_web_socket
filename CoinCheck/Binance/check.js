// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É
const socket = new WebSocket('ws://localhost:8000/ws/socket-server/'); // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

// –°–æ–±—ã—Ç–∏–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
socket.onopen = function() {
    console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! üéâ');

    // –£–∫–∞–∑—ã–≤–∞–µ–º –≤–∞–ª—é—Ç—É –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    const tickerMessage = JSON.stringify({ ticker: 'BTC' }); // –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É ETH
    socket.send(tickerMessage);
};

// –°–æ–±—ã—Ç–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
socket.onmessage = function(event) {
    const data = JSON.parse(event.data); // –ü–∞—Ä—Å–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', data.message); // –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
};

// –°–æ–±—ã—Ç–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
socket.onclose = function(event) {
    console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ!', event);
};

// –°–æ–±—ã—Ç–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
socket.onerror = function(error) {
    console.error('–û—à–∏–±–∫–∞ WebSocket:', error);
};
